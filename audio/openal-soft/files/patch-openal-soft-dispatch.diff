--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -478,6 +478,7 @@
 if(NOT HAVE_GUIDDEF_H)
     check_include_file(initguid.h HAVE_INITGUID_H)
 endif()
+check_include_file(dispatch/dispatch.h HAVE_DISPATCH_H)
 
 # Some systems need libm for some math functions to work
 set(MATH_LIB )
--- config.h.in.orig
+++ config.h.in
@@ -92,6 +92,9 @@
 /* Define if we have initguid.h */
 #cmakedefine HAVE_INITGUID_H
 
+/* Define if we have dispatch.h */
+#cmakedefine HAVE_DISPATCH_H
+
 /* Define if we have GCC's __get_cpuid() */
 #cmakedefine HAVE_GCC_GET_CPUID
 
--- common/threads.h.orig
+++ common/threads.h
@@ -11,7 +11,7 @@
 #define FORCE_ALIGN
 #endif
 
-#if defined(__APPLE__)
+#if defined(HAVE_DISPATCH_H)
 #include <dispatch/dispatch.h>
 #elif !defined(_WIN32)
 #include <semaphore.h>
@@ -24,7 +24,7 @@
 class semaphore {
 #ifdef _WIN32
     using native_type = void*;
-#elif defined(__APPLE__)
+#elif defined(HAVE_DISPATCH_H)
     using native_type = dispatch_semaphore_t;
 #else
     using native_type = sem_t;
--- common/threads.cpp.orig
+++ common/threads.cpp
@@ -114,7 +114,7 @@
 void althrd_setname(const char*) { }
 #endif
 
-#ifdef __APPLE__
+#ifdef HAVE_DISPATCH_H
 
 namespace al {
 
@@ -139,7 +139,7 @@
 
 } // namespace al
 
-#else /* !__APPLE__ */
+#else /* !HAVE_DISPATCH_H */
 
 #include <cerrno>
 
@@ -171,6 +171,6 @@
 
 } // namespace al
 
-#endif /* __APPLE__ */
+#endif /* HAVE_DISPATCH_H */
 
 #endif /* _WIN32 */
